{"ast":null,"code":"export const mealPlans = [{\n  id: 1,\n  name: \"Healthy Week\",\n  description: \"A balanced week of nutritious meals\",\n  days: [{\n    date: \"2024-01-15\",\n    meals: {\n      breakfast: {\n        recipeId: 1,\n        servings: 1\n      },\n      lunch: {\n        recipeId: 5,\n        servings: 1\n      },\n      dinner: {\n        recipeId: 2,\n        servings: 2\n      }\n    }\n  }, {\n    date: \"2024-01-16\",\n    meals: {\n      breakfast: {\n        recipeId: 6,\n        servings: 1\n      },\n      lunch: {\n        recipeId: 1,\n        servings: 1\n      },\n      dinner: {\n        recipeId: 3,\n        servings: 2\n      }\n    }\n  }, {\n    date: \"2024-01-17\",\n    meals: {\n      breakfast: {\n        recipeId: 5,\n        servings: 1\n      },\n      lunch: {\n        recipeId: 4,\n        servings: 1\n      },\n      dinner: {\n        recipeId: 1,\n        servings: 2\n      }\n    }\n  }]\n}, {\n  id: 2,\n  name: \"Quick & Easy\",\n  description: \"Fast meals for busy weekdays\",\n  days: [{\n    date: \"2024-01-22\",\n    meals: {\n      breakfast: {\n        recipeId: 6,\n        servings: 1\n      },\n      lunch: {\n        recipeId: 2,\n        servings: 1\n      },\n      dinner: {\n        recipeId: 5,\n        servings: 2\n      }\n    }\n  }]\n}];\nexport const weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nexport const mealTypes = [{\n  id: 'breakfast',\n  name: 'Breakfast',\n  color: 'bg-yellow-100 text-yellow-800'\n}, {\n  id: 'lunch',\n  name: 'Lunch',\n  color: 'bg-green-100 text-green-800'\n}, {\n  id: 'dinner',\n  name: 'Dinner',\n  color: 'bg-blue-100 text-blue-800'\n}, {\n  id: 'snack',\n  name: 'Snack',\n  color: 'bg-purple-100 text-purple-800'\n}];\n\n// Helper functions\nexport const getMealPlanById = id => {\n  return mealPlans.find(plan => plan.id === id);\n};\nexport const generateShoppingList = (mealPlan, recipes, pantryItems) => {\n  const allIngredients = [];\n  mealPlan.days.forEach(day => {\n    Object.values(day.meals).forEach(meal => {\n      const recipe = recipes.find(r => r.id === meal.recipeId);\n      if (recipe) {\n        recipe.ingredients.forEach(ingredient => {\n          const scaledAmount = ingredient.amount * meal.servings;\n          allIngredients.push({\n            ...ingredient,\n            amount: scaledAmount,\n            recipeTitle: recipe.title\n          });\n        });\n      }\n    });\n  });\n\n  // Group by ingredient name and sum amounts\n  const groupedIngredients = allIngredients.reduce((acc, ingredient) => {\n    const key = `${ingredient.name}-${ingredient.unit}`;\n    if (acc[key]) {\n      acc[key].amount += ingredient.amount;\n      acc[key].recipes.push(ingredient.recipeTitle);\n    } else {\n      acc[key] = {\n        ...ingredient,\n        recipes: [ingredient.recipeTitle]\n      };\n    }\n    return acc;\n  }, {});\n\n  // Check against pantry and mark what's needed\n  const shoppingList = Object.values(groupedIngredients).map(ingredient => {\n    const pantryItem = pantryItems.find(item => item.name.toLowerCase() === ingredient.name.toLowerCase());\n    const inPantry = pantryItem ? pantryItem.quantity : 0;\n    const needed = Math.max(0, ingredient.amount - inPantry);\n    return {\n      ...ingredient,\n      inPantry,\n      needed,\n      shouldBuy: needed > 0\n    };\n  });\n  return shoppingList.filter(item => item.shouldBuy);\n};\nexport const getWeekDates = (startDate = new Date()) => {\n  const dates = [];\n  const start = new Date(startDate);\n  start.setDate(start.getDate() - start.getDay()); // Start from Sunday\n\n  for (let i = 0; i < 7; i++) {\n    const date = new Date(start);\n    date.setDate(start.getDate() + i);\n    dates.push({\n      date: date.toISOString().split('T')[0],\n      dayName: weekDays[i],\n      isToday: date.toDateString() === new Date().toDateString()\n    });\n  }\n  return dates;\n};","map":{"version":3,"names":["mealPlans","id","name","description","days","date","meals","breakfast","recipeId","servings","lunch","dinner","weekDays","mealTypes","color","getMealPlanById","find","plan","generateShoppingList","mealPlan","recipes","pantryItems","allIngredients","forEach","day","Object","values","meal","recipe","r","ingredients","ingredient","scaledAmount","amount","push","recipeTitle","title","groupedIngredients","reduce","acc","key","unit","shoppingList","map","pantryItem","item","toLowerCase","inPantry","quantity","needed","Math","max","shouldBuy","filter","getWeekDates","startDate","Date","dates","start","setDate","getDate","getDay","i","toISOString","split","dayName","isToday","toDateString"],"sources":["/Users/shayankazi/PROJECTS/FlavourFinder/src/data/mealPlans.js"],"sourcesContent":["export const mealPlans = [\n  {\n    id: 1,\n    name: \"Healthy Week\",\n    description: \"A balanced week of nutritious meals\",\n    days: [\n      {\n        date: \"2024-01-15\",\n        meals: {\n          breakfast: { recipeId: 1, servings: 1 },\n          lunch: { recipeId: 5, servings: 1 },\n          dinner: { recipeId: 2, servings: 2 }\n        }\n      },\n      {\n        date: \"2024-01-16\",\n        meals: {\n          breakfast: { recipeId: 6, servings: 1 },\n          lunch: { recipeId: 1, servings: 1 },\n          dinner: { recipeId: 3, servings: 2 }\n        }\n      },\n      {\n        date: \"2024-01-17\",\n        meals: {\n          breakfast: { recipeId: 5, servings: 1 },\n          lunch: { recipeId: 4, servings: 1 },\n          dinner: { recipeId: 1, servings: 2 }\n        }\n      }\n    ]\n  },\n  {\n    id: 2,\n    name: \"Quick & Easy\",\n    description: \"Fast meals for busy weekdays\",\n    days: [\n      {\n        date: \"2024-01-22\",\n        meals: {\n          breakfast: { recipeId: 6, servings: 1 },\n          lunch: { recipeId: 2, servings: 1 },\n          dinner: { recipeId: 5, servings: 2 }\n        }\n      }\n    ]\n  }\n];\n\nexport const weekDays = [\n  'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n];\n\nexport const mealTypes = [\n  { id: 'breakfast', name: 'Breakfast', color: 'bg-yellow-100 text-yellow-800' },\n  { id: 'lunch', name: 'Lunch', color: 'bg-green-100 text-green-800' },\n  { id: 'dinner', name: 'Dinner', color: 'bg-blue-100 text-blue-800' },\n  { id: 'snack', name: 'Snack', color: 'bg-purple-100 text-purple-800' }\n];\n\n// Helper functions\nexport const getMealPlanById = (id) => {\n  return mealPlans.find(plan => plan.id === id);\n};\n\nexport const generateShoppingList = (mealPlan, recipes, pantryItems) => {\n  const allIngredients = [];\n  \n  mealPlan.days.forEach(day => {\n    Object.values(day.meals).forEach(meal => {\n      const recipe = recipes.find(r => r.id === meal.recipeId);\n      if (recipe) {\n        recipe.ingredients.forEach(ingredient => {\n          const scaledAmount = ingredient.amount * meal.servings;\n          allIngredients.push({\n            ...ingredient,\n            amount: scaledAmount,\n            recipeTitle: recipe.title\n          });\n        });\n      }\n    });\n  });\n\n  // Group by ingredient name and sum amounts\n  const groupedIngredients = allIngredients.reduce((acc, ingredient) => {\n    const key = `${ingredient.name}-${ingredient.unit}`;\n    if (acc[key]) {\n      acc[key].amount += ingredient.amount;\n      acc[key].recipes.push(ingredient.recipeTitle);\n    } else {\n      acc[key] = {\n        ...ingredient,\n        recipes: [ingredient.recipeTitle]\n      };\n    }\n    return acc;\n  }, {});\n\n  // Check against pantry and mark what's needed\n  const shoppingList = Object.values(groupedIngredients).map(ingredient => {\n    const pantryItem = pantryItems.find(item => \n      item.name.toLowerCase() === ingredient.name.toLowerCase()\n    );\n    \n    const inPantry = pantryItem ? pantryItem.quantity : 0;\n    const needed = Math.max(0, ingredient.amount - inPantry);\n    \n    return {\n      ...ingredient,\n      inPantry,\n      needed,\n      shouldBuy: needed > 0\n    };\n  });\n\n  return shoppingList.filter(item => item.shouldBuy);\n};\n\nexport const getWeekDates = (startDate = new Date()) => {\n  const dates = [];\n  const start = new Date(startDate);\n  start.setDate(start.getDate() - start.getDay()); // Start from Sunday\n  \n  for (let i = 0; i < 7; i++) {\n    const date = new Date(start);\n    date.setDate(start.getDate() + i);\n    dates.push({\n      date: date.toISOString().split('T')[0],\n      dayName: weekDays[i],\n      isToday: date.toDateString() === new Date().toDateString()\n    });\n  }\n  \n  return dates;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
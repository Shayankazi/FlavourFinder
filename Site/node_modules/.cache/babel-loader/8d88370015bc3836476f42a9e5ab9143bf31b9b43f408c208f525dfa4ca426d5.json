{"ast":null,"code":"var _jsxFileName = \"/Users/shayankazi/PROJECTS/FlavourFinder/Site/src/contexts/FavoritesContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesContext = /*#__PURE__*/createContext();\nexport const useFavorites = () => {\n  _s();\n  const context = useContext(FavoritesContext);\n  if (!context) {\n    throw new Error('useFavorites must be used within a FavoritesProvider');\n  }\n  return context;\n};\n_s(useFavorites, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const FavoritesProvider = ({\n  children\n}) => {\n  _s2();\n  const [favorites, setFavorites] = useState(() => {\n    // Force reset to show sample data - remove localStorage temporarily\n    localStorage.removeItem('recipe-favorites');\n    return [1, 3, 5, 7, 9, 11]; // Default sample favorites with variety\n  });\n\n  // Save favorites to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('recipe-favorites', JSON.stringify(favorites));\n  }, [favorites]);\n  const toggleFavorite = recipeId => {\n    setFavorites(prev => {\n      if (prev.includes(recipeId)) {\n        return prev.filter(id => id !== recipeId);\n      } else {\n        return [...prev, recipeId];\n      }\n    });\n  };\n  const isFavorite = recipeId => {\n    return favorites.includes(recipeId);\n  };\n  const value = {\n    favorites,\n    toggleFavorite,\n    isFavorite,\n    favoriteCount: favorites.length\n  };\n  return /*#__PURE__*/_jsxDEV(FavoritesContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s2(FavoritesProvider, \"b0ZoofcG6jR3TFUvWcNy9FOU9Fg=\");\n_c = FavoritesProvider;\nvar _c;\n$RefreshReg$(_c, \"FavoritesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","FavoritesContext","useFavorites","_s","context","Error","FavoritesProvider","children","_s2","favorites","setFavorites","localStorage","removeItem","setItem","JSON","stringify","toggleFavorite","recipeId","prev","includes","filter","id","isFavorite","value","favoriteCount","length","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shayankazi/PROJECTS/FlavourFinder/Site/src/contexts/FavoritesContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst FavoritesContext = createContext();\n\nexport const useFavorites = () => {\n  const context = useContext(FavoritesContext);\n  if (!context) {\n    throw new Error('useFavorites must be used within a FavoritesProvider');\n  }\n  return context;\n};\n\nexport const FavoritesProvider = ({ children }) => {\n  const [favorites, setFavorites] = useState(() => {\n    // Force reset to show sample data - remove localStorage temporarily\n    localStorage.removeItem('recipe-favorites');\n    return [1, 3, 5, 7, 9, 11]; // Default sample favorites with variety\n  });\n\n  // Save favorites to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('recipe-favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  const toggleFavorite = (recipeId) => {\n    setFavorites(prev => {\n      if (prev.includes(recipeId)) {\n        return prev.filter(id => id !== recipeId);\n      } else {\n        return [...prev, recipeId];\n      }\n    });\n  };\n\n  const isFavorite = (recipeId) => {\n    return favorites.includes(recipeId);\n  };\n\n  const value = {\n    favorites,\n    toggleFavorite,\n    isFavorite,\n    favoriteCount: favorites.length\n  };\n\n  return (\n    <FavoritesContext.Provider value={value}>\n      {children}\n    </FavoritesContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,gBAAgB,gBAAGN,aAAa,CAAC,CAAC;AAExC,OAAO,MAAMO,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,OAAO,GAAGR,UAAU,CAACK,gBAAgB,CAAC;EAC5C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EACzE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,YAAY;AAQzB,OAAO,MAAMI,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACjD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,MAAM;IAC/C;IACAc,YAAY,CAACC,UAAU,CAAC,kBAAkB,CAAC;IAC3C,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC;;EAEF;EACAd,SAAS,CAAC,MAAM;IACda,YAAY,CAACE,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACN,SAAS,CAAC,CAAC;EACrE,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMO,cAAc,GAAIC,QAAQ,IAAK;IACnCP,YAAY,CAACQ,IAAI,IAAI;MACnB,IAAIA,IAAI,CAACC,QAAQ,CAACF,QAAQ,CAAC,EAAE;QAC3B,OAAOC,IAAI,CAACE,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAKJ,QAAQ,CAAC;MAC3C,CAAC,MAAM;QACL,OAAO,CAAC,GAAGC,IAAI,EAAED,QAAQ,CAAC;MAC5B;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,UAAU,GAAIL,QAAQ,IAAK;IAC/B,OAAOR,SAAS,CAACU,QAAQ,CAACF,QAAQ,CAAC;EACrC,CAAC;EAED,MAAMM,KAAK,GAAG;IACZd,SAAS;IACTO,cAAc;IACdM,UAAU;IACVE,aAAa,EAAEf,SAAS,CAACgB;EAC3B,CAAC;EAED,oBACEzB,OAAA,CAACC,gBAAgB,CAACyB,QAAQ;IAACH,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EACrCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACtB,GAAA,CAtCWF,iBAAiB;AAAAyB,EAAA,GAAjBzB,iBAAiB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
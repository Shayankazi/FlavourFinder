{"ast":null,"code":"var _jsxFileName = \"/Users/shayankazi/PROJECTS/FlavourFinder/src/components/Plasma.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport { Renderer, Program, Mesh, Triangle } from 'ogl';\nimport './Plasma.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hexToRgb = hex => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (!result) return [1, 0.5, 0.2];\n  return [parseInt(result[1], 16) / 255, parseInt(result[2], 16) / 255, parseInt(result[3], 16) / 255];\n};\nconst vertex = `#version 300 es\nprecision highp float;\nin vec2 position;\nin vec2 uv;\nout vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = vec4(position, 0.0, 1.0);\n}\n`;\nconst fragment = `#version 300 es\nprecision highp float;\nuniform vec2 iResolution;\nuniform float iTime;\nuniform vec3 uCustomColor;\nuniform float uUseCustomColor;\nuniform float uSpeed;\nuniform float uDirection;\nuniform float uScale;\nuniform float uOpacity;\nuniform vec2 uMouse;\nuniform float uMouseInteractive;\nout vec4 fragColor;\n\nvoid mainImage(out vec4 o, vec2 C) {\n  vec2 center = iResolution.xy * 0.5;\n  C = (C - center) / uScale + center;\n  \n  vec2 mouseOffset = (uMouse - center) * 0.0002;\n  C += mouseOffset * length(C - center) * step(0.5, uMouseInteractive);\n  \n  float i, d, z, T = iTime * uSpeed * uDirection;\n  vec3 O, p, S;\n\n  for (vec2 r = iResolution.xy, Q; ++i < 60.; O += o.w/d*o.xyz) {\n    p = z*normalize(vec3(C-.5*r,r.y));\n    p.z -= 4.;\n    S = p;\n    d = p.y-T;\n    \n    p.x += .4*(1.+p.y)*sin(d + p.x*0.1)*cos(.34*d + p.x*0.05);\n    Q = p.xz *= mat2(cos(p.y+vec4(0,11,33,0)-T));\n    z+= d = abs(sqrt(length(Q*Q)) - .25*(5.+S.y))/3.+8e-4;\n    o = 1.+sin(S.y+p.z*.5+S.z-length(S-p)+vec4(2,1,0,8));\n  }\n  \n  o.xyz = tanh(O/1e4);\n}\n\nbool finite1(float x){ return !(isnan(x) || isinf(x)); }\nvec3 sanitize(vec3 c){\n  return vec3(\n    finite1(c.r) ? c.r : 0.0,\n    finite1(c.g) ? c.g : 0.0,\n    finite1(c.b) ? c.b : 0.0\n  );\n}\n\nvoid main() {\n  vec4 o = vec4(0.0);\n  mainImage(o, gl_FragCoord.xy);\n  vec3 rgb = sanitize(o.rgb);\n  \n  float intensity = (rgb.r + rgb.g + rgb.b) / 3.0;\n  vec3 customColor = intensity * uCustomColor;\n  vec3 finalColor = mix(rgb, customColor, step(0.5, uUseCustomColor));\n  \n  float alpha = length(rgb) * uOpacity;\n  fragColor = vec4(finalColor, alpha);\n}`;\nexport const Plasma = ({\n  color = '#ffffff',\n  speed = 1,\n  direction = 'forward',\n  scale = 1,\n  opacity = 1,\n  mouseInteractive = true\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const mousePos = useRef({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const useCustomColor = color ? 1.0 : 0.0;\n    const customColorRgb = color ? hexToRgb(color) : [1, 1, 1];\n    const directionMultiplier = direction === 'reverse' ? -1.0 : 1.0;\n    const renderer = new Renderer({\n      webgl: 2,\n      alpha: true,\n      antialias: true,\n      dpr: Math.min(window.devicePixelRatio || 1, 2),\n      premultipliedAlpha: false,\n      preserveDrawingBuffer: true\n    });\n    const gl = renderer.gl;\n    if (!gl) {\n      console.warn('WebGL not supported');\n      return;\n    }\n    const canvas = gl.canvas;\n    canvas.style.display = 'block';\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    canvas.style.position = 'absolute';\n    canvas.style.top = '0';\n    canvas.style.left = '0';\n    canvas.style.zIndex = '0';\n    containerRef.current.appendChild(canvas);\n    const geometry = new Triangle(gl);\n    const program = new Program(gl, {\n      vertex: vertex,\n      fragment: fragment,\n      uniforms: {\n        iTime: {\n          value: 0\n        },\n        iResolution: {\n          value: new Float32Array([1, 1])\n        },\n        uCustomColor: {\n          value: new Float32Array(customColorRgb)\n        },\n        uUseCustomColor: {\n          value: useCustomColor\n        },\n        uSpeed: {\n          value: speed * 0.4\n        },\n        uDirection: {\n          value: directionMultiplier\n        },\n        uScale: {\n          value: scale\n        },\n        uOpacity: {\n          value: opacity\n        },\n        uMouse: {\n          value: new Float32Array([0, 0])\n        },\n        uMouseInteractive: {\n          value: mouseInteractive ? 1.0 : 0.0\n        }\n      }\n    });\n    const mesh = new Mesh(gl, {\n      geometry,\n      program\n    });\n    const handleMouseMove = e => {\n      if (!mouseInteractive || !containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      mousePos.current.x = e.clientX - rect.left;\n      mousePos.current.y = e.clientY - rect.top;\n      const mouseUniform = program.uniforms.uMouse.value;\n      mouseUniform[0] = mousePos.current.x;\n      mouseUniform[1] = mousePos.current.y;\n    };\n    if (mouseInteractive && containerRef.current) {\n      containerRef.current.addEventListener('mousemove', handleMouseMove);\n    }\n    const setSize = () => {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      const width = Math.max(1, Math.floor(rect.width));\n      const height = Math.max(1, Math.floor(rect.height));\n      renderer.setSize(width, height);\n      const res = program.uniforms.iResolution.value;\n      res[0] = gl.drawingBufferWidth;\n      res[1] = gl.drawingBufferHeight;\n    };\n    const ro = new ResizeObserver(setSize);\n    if (containerRef.current) {\n      ro.observe(containerRef.current);\n      // Ensure initial size is set\n      setTimeout(() => {\n        setSize();\n      }, 100);\n    }\n    let raf = 0;\n    const t0 = performance.now();\n    const loop = t => {\n      let timeValue = (t - t0) * 0.001;\n      if (direction === 'pingpong') {\n        const cycle = Math.sin(timeValue * 0.5) * directionMultiplier;\n        program.uniforms.uDirection.value = cycle;\n      }\n      program.uniforms.iTime.value = timeValue;\n      renderer.render({\n        scene: mesh\n      });\n      raf = requestAnimationFrame(loop);\n    };\n    raf = requestAnimationFrame(loop);\n    return () => {\n      cancelAnimationFrame(raf);\n      ro.disconnect();\n      if (mouseInteractive && containerRef.current) {\n        containerRef.current.removeEventListener('mousemove', handleMouseMove);\n      }\n      try {\n        var _containerRef$current;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.removeChild(canvas);\n      } catch {\n        console.warn('Canvas already removed from container');\n      }\n    };\n  }, [color, speed, direction, scale, opacity, mouseInteractive]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"plasma-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 10\n  }, this);\n};\n_s(Plasma, \"r0iWZlJSVKCLdQHRL9OweN9Ifw4=\");\n_c = Plasma;\nexport default Plasma;\nvar _c;\n$RefreshReg$(_c, \"Plasma\");","map":{"version":3,"names":["useEffect","useRef","Renderer","Program","Mesh","Triangle","jsxDEV","_jsxDEV","hexToRgb","hex","result","exec","parseInt","vertex","fragment","Plasma","color","speed","direction","scale","opacity","mouseInteractive","_s","containerRef","mousePos","x","y","current","useCustomColor","customColorRgb","directionMultiplier","renderer","webgl","alpha","antialias","dpr","Math","min","window","devicePixelRatio","premultipliedAlpha","preserveDrawingBuffer","gl","console","warn","canvas","style","display","width","height","position","top","left","zIndex","appendChild","geometry","program","uniforms","iTime","value","iResolution","Float32Array","uCustomColor","uUseCustomColor","uSpeed","uDirection","uScale","uOpacity","uMouse","uMouseInteractive","mesh","handleMouseMove","e","rect","getBoundingClientRect","clientX","clientY","mouseUniform","addEventListener","setSize","max","floor","res","drawingBufferWidth","drawingBufferHeight","ro","ResizeObserver","observe","setTimeout","raf","t0","performance","now","loop","t","timeValue","cycle","sin","render","scene","requestAnimationFrame","cancelAnimationFrame","disconnect","removeEventListener","_containerRef$current","removeChild","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shayankazi/PROJECTS/FlavourFinder/src/components/Plasma.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { Renderer, Program, Mesh, Triangle } from 'ogl';\nimport './Plasma.css';\n\nconst hexToRgb = hex => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (!result) return [1, 0.5, 0.2];\n  return [parseInt(result[1], 16) / 255, parseInt(result[2], 16) / 255, parseInt(result[3], 16) / 255];\n};\n\nconst vertex = `#version 300 es\nprecision highp float;\nin vec2 position;\nin vec2 uv;\nout vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = vec4(position, 0.0, 1.0);\n}\n`;\n\nconst fragment = `#version 300 es\nprecision highp float;\nuniform vec2 iResolution;\nuniform float iTime;\nuniform vec3 uCustomColor;\nuniform float uUseCustomColor;\nuniform float uSpeed;\nuniform float uDirection;\nuniform float uScale;\nuniform float uOpacity;\nuniform vec2 uMouse;\nuniform float uMouseInteractive;\nout vec4 fragColor;\n\nvoid mainImage(out vec4 o, vec2 C) {\n  vec2 center = iResolution.xy * 0.5;\n  C = (C - center) / uScale + center;\n  \n  vec2 mouseOffset = (uMouse - center) * 0.0002;\n  C += mouseOffset * length(C - center) * step(0.5, uMouseInteractive);\n  \n  float i, d, z, T = iTime * uSpeed * uDirection;\n  vec3 O, p, S;\n\n  for (vec2 r = iResolution.xy, Q; ++i < 60.; O += o.w/d*o.xyz) {\n    p = z*normalize(vec3(C-.5*r,r.y));\n    p.z -= 4.;\n    S = p;\n    d = p.y-T;\n    \n    p.x += .4*(1.+p.y)*sin(d + p.x*0.1)*cos(.34*d + p.x*0.05);\n    Q = p.xz *= mat2(cos(p.y+vec4(0,11,33,0)-T));\n    z+= d = abs(sqrt(length(Q*Q)) - .25*(5.+S.y))/3.+8e-4;\n    o = 1.+sin(S.y+p.z*.5+S.z-length(S-p)+vec4(2,1,0,8));\n  }\n  \n  o.xyz = tanh(O/1e4);\n}\n\nbool finite1(float x){ return !(isnan(x) || isinf(x)); }\nvec3 sanitize(vec3 c){\n  return vec3(\n    finite1(c.r) ? c.r : 0.0,\n    finite1(c.g) ? c.g : 0.0,\n    finite1(c.b) ? c.b : 0.0\n  );\n}\n\nvoid main() {\n  vec4 o = vec4(0.0);\n  mainImage(o, gl_FragCoord.xy);\n  vec3 rgb = sanitize(o.rgb);\n  \n  float intensity = (rgb.r + rgb.g + rgb.b) / 3.0;\n  vec3 customColor = intensity * uCustomColor;\n  vec3 finalColor = mix(rgb, customColor, step(0.5, uUseCustomColor));\n  \n  float alpha = length(rgb) * uOpacity;\n  fragColor = vec4(finalColor, alpha);\n}`;\n\nexport const Plasma = ({\n  color = '#ffffff',\n  speed = 1,\n  direction = 'forward',\n  scale = 1,\n  opacity = 1,\n  mouseInteractive = true\n}) => {\n  const containerRef = useRef(null);\n  const mousePos = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    const useCustomColor = color ? 1.0 : 0.0;\n    const customColorRgb = color ? hexToRgb(color) : [1, 1, 1];\n\n    const directionMultiplier = direction === 'reverse' ? -1.0 : 1.0;\n\n    const renderer = new Renderer({\n      webgl: 2,\n      alpha: true,\n      antialias: true,\n      dpr: Math.min(window.devicePixelRatio || 1, 2),\n      premultipliedAlpha: false,\n      preserveDrawingBuffer: true\n    });\n    const gl = renderer.gl;\n    if (!gl) {\n      console.warn('WebGL not supported');\n      return;\n    }\n    \n    const canvas = gl.canvas;\n    canvas.style.display = 'block';\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    canvas.style.position = 'absolute';\n    canvas.style.top = '0';\n    canvas.style.left = '0';\n    canvas.style.zIndex = '0';\n    containerRef.current.appendChild(canvas);\n\n    const geometry = new Triangle(gl);\n\n    const program = new Program(gl, {\n      vertex: vertex,\n      fragment: fragment,\n      uniforms: {\n        iTime: { value: 0 },\n        iResolution: { value: new Float32Array([1, 1]) },\n        uCustomColor: { value: new Float32Array(customColorRgb) },\n        uUseCustomColor: { value: useCustomColor },\n        uSpeed: { value: speed * 0.4 },\n        uDirection: { value: directionMultiplier },\n        uScale: { value: scale },\n        uOpacity: { value: opacity },\n        uMouse: { value: new Float32Array([0, 0]) },\n        uMouseInteractive: { value: mouseInteractive ? 1.0 : 0.0 }\n      }\n    });\n\n    const mesh = new Mesh(gl, { geometry, program });\n\n    const handleMouseMove = e => {\n      if (!mouseInteractive || !containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      mousePos.current.x = e.clientX - rect.left;\n      mousePos.current.y = e.clientY - rect.top;\n      const mouseUniform = program.uniforms.uMouse.value;\n      mouseUniform[0] = mousePos.current.x;\n      mouseUniform[1] = mousePos.current.y;\n    };\n\n    if (mouseInteractive && containerRef.current) {\n      containerRef.current.addEventListener('mousemove', handleMouseMove);\n    }\n\n    const setSize = () => {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      const width = Math.max(1, Math.floor(rect.width));\n      const height = Math.max(1, Math.floor(rect.height));\n      renderer.setSize(width, height);\n      const res = program.uniforms.iResolution.value;\n      res[0] = gl.drawingBufferWidth;\n      res[1] = gl.drawingBufferHeight;\n    };\n\n    const ro = new ResizeObserver(setSize);\n    if (containerRef.current) {\n      ro.observe(containerRef.current);\n      // Ensure initial size is set\n      setTimeout(() => {\n        setSize();\n      }, 100);\n    }\n\n    let raf = 0;\n    const t0 = performance.now();\n    const loop = t => {\n      let timeValue = (t - t0) * 0.001;\n\n      if (direction === 'pingpong') {\n        const cycle = Math.sin(timeValue * 0.5) * directionMultiplier;\n        program.uniforms.uDirection.value = cycle;\n      }\n\n      program.uniforms.iTime.value = timeValue;\n      renderer.render({ scene: mesh });\n      raf = requestAnimationFrame(loop);\n    };\n    raf = requestAnimationFrame(loop);\n\n    return () => {\n      cancelAnimationFrame(raf);\n      ro.disconnect();\n      if (mouseInteractive && containerRef.current) {\n        containerRef.current.removeEventListener('mousemove', handleMouseMove);\n      }\n      try {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        containerRef.current?.removeChild(canvas);\n      } catch {\n        console.warn('Canvas already removed from container');\n      }\n    };\n  }, [color, speed, direction, scale, opacity, mouseInteractive]);\n\n  return <div ref={containerRef} className=\"plasma-container\" />;\n};\n\nexport default Plasma;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import{useEffect,useRef,useState}from'react';import{Renderer,Program,Mesh,Triangle}from'ogl';import'./Plasma.css';import{jsx as _jsx}from\"react/jsx-runtime\";const hexToRgb=hex=>{const result=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);if(!result)return[1,0.5,0.2];return[parseInt(result[1],16)/255,parseInt(result[2],16)/255,parseInt(result[3],16)/255];};const vertex=\"#version 300 es\\nprecision highp float;\\nin vec2 position;\\nin vec2 uv;\\nout vec2 vUv;\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = vec4(position, 0.0, 1.0);\\n}\\n\";// Optimized fragment shader with reduced iterations\nconst fragment=\"#version 300 es\\nprecision mediump float;\\nuniform vec2 iResolution;\\nuniform float iTime;\\nuniform vec3 uCustomColor;\\nuniform float uUseCustomColor;\\nuniform float uSpeed;\\nuniform float uDirection;\\nuniform float uScale;\\nuniform float uOpacity;\\nuniform vec2 uMouse;\\nuniform float uMouseInteractive;\\nout vec4 fragColor;\\n\\nvoid mainImage(out vec4 o, vec2 C) {\\n  vec2 center = iResolution.xy * 0.5;\\n  C = (C - center) / uScale + center;\\n  \\n  vec2 mouseOffset = (uMouse - center) * 0.0001;\\n  C += mouseOffset * length(C - center) * step(0.5, uMouseInteractive);\\n  \\n  float i, d, z, T = iTime * uSpeed * uDirection;\\n  vec3 O, p, S;\\n\\n  // Reduced iterations from 60 to 25 for better performance\\n  for (vec2 r = iResolution.xy, Q; ++i < 25.; O += o.w/d*o.xyz) {\\n    p = z*normalize(vec3(C-.5*r,r.y));\\n    p.z -= 4.;\\n    S = p;\\n    d = p.y-T;\\n    \\n    p.x += .4*(1.+p.y)*sin(d + p.x*0.1)*cos(.34*d + p.x*0.05);\\n    Q = p.xz *= mat2(cos(p.y+vec4(0,11,33,0)-T));\\n    z+= d = abs(sqrt(length(Q*Q)) - .25*(5.+S.y))/3.+8e-4;\\n    o = 1.+sin(S.y+p.z*.5+S.z-length(S-p)+vec4(2,1,0,8));\\n  }\\n  \\n  o.xyz = tanh(O/1e4);\\n}\\n\\nbool finite1(float x){ return !(isnan(x) || isinf(x)); }\\nvec3 sanitize(vec3 c){\\n  return vec3(\\n    finite1(c.r) ? c.r : 0.0,\\n    finite1(c.g) ? c.g : 0.0,\\n    finite1(c.b) ? c.b : 0.0\\n  );\\n}\\n\\nvoid main() {\\n  vec4 o = vec4(0.0);\\n  mainImage(o, gl_FragCoord.xy);\\n  vec3 rgb = sanitize(o.rgb);\\n  \\n  float intensity = (rgb.r + rgb.g + rgb.b) / 3.0;\\n  vec3 customColor = intensity * uCustomColor;\\n  vec3 finalColor = mix(rgb, customColor, step(0.5, uUseCustomColor));\\n  \\n  float alpha = length(rgb) * uOpacity;\\n  fragColor = vec4(finalColor, alpha);\\n}\";export const Plasma=_ref=>{let{color='#ffffff',speed=1,direction='forward',scale=1,opacity=1,mouseInteractive=true}=_ref;const containerRef=useRef(null);const mousePos=useRef({x:0,y:0});const[isVisible,setIsVisible]=useState(false);const rafRef=useRef(null);// Performance optimization: only render when visible\nuseEffect(()=>{const observer=new IntersectionObserver(_ref2=>{let[entry]=_ref2;setIsVisible(entry.isIntersecting);},{threshold:0.1});if(containerRef.current){observer.observe(containerRef.current);}return()=>observer.disconnect();},[]);useEffect(()=>{if(!containerRef.current||!isVisible)return;const useCustomColor=color?1.0:0.0;const customColorRgb=color?hexToRgb(color):[1,1,1];const directionMultiplier=direction==='reverse'?-1.0:1.0;// Reduced DPR for better performance\nconst renderer=new Renderer({webgl:2,alpha:true,antialias:false,// Disabled for performance\ndpr:Math.min(window.devicePixelRatio||1,1.5),// Reduced from 2\npremultipliedAlpha:false,preserveDrawingBuffer:false// Disabled for performance\n});const gl=renderer.gl;if(!gl){console.warn('WebGL not supported');return;}const canvas=gl.canvas;canvas.style.display='block';canvas.style.width='100%';canvas.style.height='100%';canvas.style.position='absolute';canvas.style.top='0';canvas.style.left='0';canvas.style.zIndex='0';containerRef.current.appendChild(canvas);const geometry=new Triangle(gl);const program=new Program(gl,{vertex:vertex,fragment:fragment,uniforms:{iTime:{value:0},iResolution:{value:new Float32Array([1,1])},uCustomColor:{value:new Float32Array(customColorRgb)},uUseCustomColor:{value:useCustomColor},uSpeed:{value:speed*0.3},// Reduced speed multiplier\nuDirection:{value:directionMultiplier},uScale:{value:scale},uOpacity:{value:opacity},uMouse:{value:new Float32Array([0,0])},uMouseInteractive:{value:mouseInteractive?1.0:0.0}}});const mesh=new Mesh(gl,{geometry,program});// Throttled mouse move handler\nlet mouseTimeout;const handleMouseMove=e=>{if(!mouseInteractive||!containerRef.current)return;clearTimeout(mouseTimeout);mouseTimeout=setTimeout(()=>{const rect=containerRef.current.getBoundingClientRect();mousePos.current.x=e.clientX-rect.left;mousePos.current.y=e.clientY-rect.top;const mouseUniform=program.uniforms.uMouse.value;mouseUniform[0]=mousePos.current.x;mouseUniform[1]=mousePos.current.y;},16);// Throttle to ~60fps\n};if(mouseInteractive&&containerRef.current){containerRef.current.addEventListener('mousemove',handleMouseMove,{passive:true});}const setSize=()=>{if(!containerRef.current)return;const rect=containerRef.current.getBoundingClientRect();const width=Math.max(1,Math.floor(rect.width));const height=Math.max(1,Math.floor(rect.height));renderer.setSize(width,height);const res=program.uniforms.iResolution.value;res[0]=gl.drawingBufferWidth;res[1]=gl.drawingBufferHeight;};const ro=new ResizeObserver(setSize);if(containerRef.current){ro.observe(containerRef.current);setTimeout(setSize,100);}const t0=performance.now();let lastTime=0;// Reduced frame rate for better performance\nconst targetFPS=30;const frameInterval=1000/targetFPS;const loop=t=>{if(t-lastTime>=frameInterval){let timeValue=(t-t0)*0.001;if(direction==='pingpong'){const cycle=Math.sin(timeValue*0.5)*directionMultiplier;program.uniforms.uDirection.value=cycle;}program.uniforms.iTime.value=timeValue;renderer.render({scene:mesh});lastTime=t;}rafRef.current=requestAnimationFrame(loop);};rafRef.current=requestAnimationFrame(loop);return()=>{if(rafRef.current){cancelAnimationFrame(rafRef.current);}clearTimeout(mouseTimeout);ro.disconnect();if(mouseInteractive&&containerRef.current){containerRef.current.removeEventListener('mousemove',handleMouseMove);}try{var _containerRef$current;(_containerRef$current=containerRef.current)===null||_containerRef$current===void 0?void 0:_containerRef$current.removeChild(canvas);}catch(_unused){console.warn('Canvas already removed from container');}};},[color,speed,direction,scale,opacity,mouseInteractive,isVisible]);return/*#__PURE__*/_jsx(\"div\",{ref:containerRef,className:\"plasma-container\"});};export default Plasma;","map":{"version":3,"names":["useEffect","useRef","useState","Renderer","Program","Mesh","Triangle","jsx","_jsx","hexToRgb","hex","result","exec","parseInt","vertex","fragment","Plasma","_ref","color","speed","direction","scale","opacity","mouseInteractive","containerRef","mousePos","x","y","isVisible","setIsVisible","rafRef","observer","IntersectionObserver","_ref2","entry","isIntersecting","threshold","current","observe","disconnect","useCustomColor","customColorRgb","directionMultiplier","renderer","webgl","alpha","antialias","dpr","Math","min","window","devicePixelRatio","premultipliedAlpha","preserveDrawingBuffer","gl","console","warn","canvas","style","display","width","height","position","top","left","zIndex","appendChild","geometry","program","uniforms","iTime","value","iResolution","Float32Array","uCustomColor","uUseCustomColor","uSpeed","uDirection","uScale","uOpacity","uMouse","uMouseInteractive","mesh","mouseTimeout","handleMouseMove","e","clearTimeout","setTimeout","rect","getBoundingClientRect","clientX","clientY","mouseUniform","addEventListener","passive","setSize","max","floor","res","drawingBufferWidth","drawingBufferHeight","ro","ResizeObserver","t0","performance","now","lastTime","targetFPS","frameInterval","loop","t","timeValue","cycle","sin","render","scene","requestAnimationFrame","cancelAnimationFrame","removeEventListener","_containerRef$current","removeChild","_unused","ref","className"],"sources":["/Users/shayankazi/PROJECTS/FlavourFinder/Site/src/components/Plasma.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Renderer, Program, Mesh, Triangle } from 'ogl';\nimport './Plasma.css';\n\nconst hexToRgb = hex => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (!result) return [1, 0.5, 0.2];\n  return [parseInt(result[1], 16) / 255, parseInt(result[2], 16) / 255, parseInt(result[3], 16) / 255];\n};\n\nconst vertex = `#version 300 es\nprecision highp float;\nin vec2 position;\nin vec2 uv;\nout vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = vec4(position, 0.0, 1.0);\n}\n`;\n\n// Optimized fragment shader with reduced iterations\nconst fragment = `#version 300 es\nprecision mediump float;\nuniform vec2 iResolution;\nuniform float iTime;\nuniform vec3 uCustomColor;\nuniform float uUseCustomColor;\nuniform float uSpeed;\nuniform float uDirection;\nuniform float uScale;\nuniform float uOpacity;\nuniform vec2 uMouse;\nuniform float uMouseInteractive;\nout vec4 fragColor;\n\nvoid mainImage(out vec4 o, vec2 C) {\n  vec2 center = iResolution.xy * 0.5;\n  C = (C - center) / uScale + center;\n  \n  vec2 mouseOffset = (uMouse - center) * 0.0001;\n  C += mouseOffset * length(C - center) * step(0.5, uMouseInteractive);\n  \n  float i, d, z, T = iTime * uSpeed * uDirection;\n  vec3 O, p, S;\n\n  // Reduced iterations from 60 to 25 for better performance\n  for (vec2 r = iResolution.xy, Q; ++i < 25.; O += o.w/d*o.xyz) {\n    p = z*normalize(vec3(C-.5*r,r.y));\n    p.z -= 4.;\n    S = p;\n    d = p.y-T;\n    \n    p.x += .4*(1.+p.y)*sin(d + p.x*0.1)*cos(.34*d + p.x*0.05);\n    Q = p.xz *= mat2(cos(p.y+vec4(0,11,33,0)-T));\n    z+= d = abs(sqrt(length(Q*Q)) - .25*(5.+S.y))/3.+8e-4;\n    o = 1.+sin(S.y+p.z*.5+S.z-length(S-p)+vec4(2,1,0,8));\n  }\n  \n  o.xyz = tanh(O/1e4);\n}\n\nbool finite1(float x){ return !(isnan(x) || isinf(x)); }\nvec3 sanitize(vec3 c){\n  return vec3(\n    finite1(c.r) ? c.r : 0.0,\n    finite1(c.g) ? c.g : 0.0,\n    finite1(c.b) ? c.b : 0.0\n  );\n}\n\nvoid main() {\n  vec4 o = vec4(0.0);\n  mainImage(o, gl_FragCoord.xy);\n  vec3 rgb = sanitize(o.rgb);\n  \n  float intensity = (rgb.r + rgb.g + rgb.b) / 3.0;\n  vec3 customColor = intensity * uCustomColor;\n  vec3 finalColor = mix(rgb, customColor, step(0.5, uUseCustomColor));\n  \n  float alpha = length(rgb) * uOpacity;\n  fragColor = vec4(finalColor, alpha);\n}`;\n\nexport const Plasma = ({\n  color = '#ffffff',\n  speed = 1,\n  direction = 'forward',\n  scale = 1,\n  opacity = 1,\n  mouseInteractive = true\n}) => {\n  const containerRef = useRef(null);\n  const mousePos = useRef({ x: 0, y: 0 });\n  const [isVisible, setIsVisible] = useState(false);\n  const rafRef = useRef(null);\n\n  // Performance optimization: only render when visible\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        setIsVisible(entry.isIntersecting);\n      },\n      { threshold: 0.1 }\n    );\n\n    if (containerRef.current) {\n      observer.observe(containerRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, []);\n\n  useEffect(() => {\n    if (!containerRef.current || !isVisible) return;\n\n    const useCustomColor = color ? 1.0 : 0.0;\n    const customColorRgb = color ? hexToRgb(color) : [1, 1, 1];\n    const directionMultiplier = direction === 'reverse' ? -1.0 : 1.0;\n\n    // Reduced DPR for better performance\n    const renderer = new Renderer({\n      webgl: 2,\n      alpha: true,\n      antialias: false, // Disabled for performance\n      dpr: Math.min(window.devicePixelRatio || 1, 1.5), // Reduced from 2\n      premultipliedAlpha: false,\n      preserveDrawingBuffer: false // Disabled for performance\n    });\n    \n    const gl = renderer.gl;\n    if (!gl) {\n      console.warn('WebGL not supported');\n      return;\n    }\n    \n    const canvas = gl.canvas;\n    canvas.style.display = 'block';\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    canvas.style.position = 'absolute';\n    canvas.style.top = '0';\n    canvas.style.left = '0';\n    canvas.style.zIndex = '0';\n    containerRef.current.appendChild(canvas);\n\n    const geometry = new Triangle(gl);\n\n    const program = new Program(gl, {\n      vertex: vertex,\n      fragment: fragment,\n      uniforms: {\n        iTime: { value: 0 },\n        iResolution: { value: new Float32Array([1, 1]) },\n        uCustomColor: { value: new Float32Array(customColorRgb) },\n        uUseCustomColor: { value: useCustomColor },\n        uSpeed: { value: speed * 0.3 }, // Reduced speed multiplier\n        uDirection: { value: directionMultiplier },\n        uScale: { value: scale },\n        uOpacity: { value: opacity },\n        uMouse: { value: new Float32Array([0, 0]) },\n        uMouseInteractive: { value: mouseInteractive ? 1.0 : 0.0 }\n      }\n    });\n\n    const mesh = new Mesh(gl, { geometry, program });\n\n    // Throttled mouse move handler\n    let mouseTimeout;\n    const handleMouseMove = e => {\n      if (!mouseInteractive || !containerRef.current) return;\n      \n      clearTimeout(mouseTimeout);\n      mouseTimeout = setTimeout(() => {\n        const rect = containerRef.current.getBoundingClientRect();\n        mousePos.current.x = e.clientX - rect.left;\n        mousePos.current.y = e.clientY - rect.top;\n        const mouseUniform = program.uniforms.uMouse.value;\n        mouseUniform[0] = mousePos.current.x;\n        mouseUniform[1] = mousePos.current.y;\n      }, 16); // Throttle to ~60fps\n    };\n\n    if (mouseInteractive && containerRef.current) {\n      containerRef.current.addEventListener('mousemove', handleMouseMove, { passive: true });\n    }\n\n    const setSize = () => {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      const width = Math.max(1, Math.floor(rect.width));\n      const height = Math.max(1, Math.floor(rect.height));\n      renderer.setSize(width, height);\n      const res = program.uniforms.iResolution.value;\n      res[0] = gl.drawingBufferWidth;\n      res[1] = gl.drawingBufferHeight;\n    };\n\n    const ro = new ResizeObserver(setSize);\n    if (containerRef.current) {\n      ro.observe(containerRef.current);\n      setTimeout(setSize, 100);\n    }\n\n    const t0 = performance.now();\n    let lastTime = 0;\n    \n    // Reduced frame rate for better performance\n    const targetFPS = 30;\n    const frameInterval = 1000 / targetFPS;\n    \n    const loop = t => {\n      if (t - lastTime >= frameInterval) {\n        let timeValue = (t - t0) * 0.001;\n\n        if (direction === 'pingpong') {\n          const cycle = Math.sin(timeValue * 0.5) * directionMultiplier;\n          program.uniforms.uDirection.value = cycle;\n        }\n\n        program.uniforms.iTime.value = timeValue;\n        renderer.render({ scene: mesh });\n        lastTime = t;\n      }\n      \n      rafRef.current = requestAnimationFrame(loop);\n    };\n    \n    rafRef.current = requestAnimationFrame(loop);\n\n    return () => {\n      if (rafRef.current) {\n        cancelAnimationFrame(rafRef.current);\n      }\n      clearTimeout(mouseTimeout);\n      ro.disconnect();\n      if (mouseInteractive && containerRef.current) {\n        containerRef.current.removeEventListener('mousemove', handleMouseMove);\n      }\n      try {\n        containerRef.current?.removeChild(canvas);\n      } catch {\n        console.warn('Canvas already removed from container');\n      }\n    };\n  }, [color, speed, direction, scale, opacity, mouseInteractive, isVisible]);\n\n  return <div ref={containerRef} className=\"plasma-container\" />;\n};\n\nexport default Plasma;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}